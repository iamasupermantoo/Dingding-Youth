<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<!-- 把spring-boot-starter-parent作为父工程，继承依赖与默认配置 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.3.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>com.youshi.zebra</groupId>
	<artifactId>zebra-parent</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>zebra-parent</name>
	<description>zebra-parent</description>
	
	<!-- 模块 -->
	<modules>
		<module>zebra-api</module>
		<module>zebra-teacher-api</module>
		<module>zebra-admin</module>
		<module>zebra-web</module>
		<module>zebra-runner</module>
		<module>zebra-boot-admin</module>
		<module>zebra-event</module>
		<module>zebra-component</module>
		<module>zebra-push</module>
		<module>zebra-tech</module>
		<module>zebra-wx</module>
	</modules>
	
	<!-- 属性 -->
	<properties>
		<spring-boot.version>1.4.3.RELEASE</spring-boot.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>
	
	<!-- 依赖 -->
	<dependencies>
		<!-- spring-boot开发工具：开发时hot reload等特性 -->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <optional>true</optional>
	    </dependency>
	    
	    <!-- spring boot admin客户端 -->
	    <dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
		</dependency>
		
        
        <!-- Jolokia jmx支持，监控jvm和应用程序指标 -->
        <dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>
	</dependencies>
	
	<!-- 依赖管理 -->
	<dependencyManagement>
		<dependencies>
		   <!-- spring-boot开发工具：开发时hot reload等特性 -->
			<dependency>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-devtools</artifactId>
		        <version>${spring-boot.version}</version>
		        <optional>true</optional>
		    </dependency>
		    
		    <dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-client</artifactId>
				<version>1.4.5</version>
			</dependency>
    
            <!-- zebra框架 -->
            <dependency>
                <groupId>com.youshi.zebra</groupId>
                <artifactId>zebra-root-pom</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.youshi.zebra</groupId>
                <artifactId>zebra-framework</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.youshi.zebra</groupId>
                <artifactId>zebra-mvc-support</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
				<groupId>com.youshi.zebra</groupId>
				<artifactId>zebra-metrics-starter</artifactId>
                <version>1.0-SNAPSHOT</version>
			</dependency>
            
            <!-- zebra业务 -->
            <dependency>
                <groupId>com.youshi.zebra</groupId>
                <artifactId>zebra-component</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.youshi.zebra</groupId>
                <artifactId>zebra-push-component</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            
            <!-- swagger2 -->
			<dependency>
			    <groupId>io.springfox</groupId>
			    <artifactId>springfox-swagger2</artifactId>
			    <version>2.2.2</version>
			</dependency>
			<dependency>
			    <groupId>io.springfox</groupId>
			    <artifactId>springfox-swagger-ui</artifactId>
			    <version>2.2.2</version>
			</dependency>
            
			<!-- spring-boot admin -->
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server</artifactId>
				<version>1.4.5</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server-ui</artifactId>
				<version>1.4.5</version>
			</dependency>
			
			<!-- zookeeper -->
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>3.4.6</version>
			</dependency>
			
			<!-- aliyun OSS SDK -->
			<dependency>
				<groupId>com.aliyun.oss</groupId>
				<artifactId>aliyun-sdk-oss</artifactId>
				<version>2.0.3</version>
			</dependency>
			
			<!-- aliyun sts sdk -->
			<dependency>
			  <groupId>com.aliyun</groupId>
			  <artifactId>aliyun-java-sdk-sts</artifactId>
			  <version>2.1.6</version>
			</dependency>
			<dependency>
			  <groupId>com.aliyun</groupId>
			  <artifactId>aliyun-java-sdk-core</artifactId>
			  <version>2.1.7</version>
			</dependency>
			
			<!-- alipay sdk -->
			<dependency>
		        <groupId>com.alibaba</groupId>
		        <artifactId>alipay-sdk</artifactId>
		        <version>1.0</version>
		    </dependency>
			
			<!-- IOS APNS SDK -->
			<dependency>
				<groupId>com.notnoop.apns</groupId>
				<artifactId>apns</artifactId>
				<version>1.0.0.Beta5</version>
			</dependency>
			
			<!-- jmagick -->
			<dependency>
				<groupId>jmagick</groupId>
				<artifactId>jmagick</artifactId>
				<version>6.6.9</version>
			</dependency>
			
			<!-- 语言增强hppc -->
			<dependency>
				<groupId>com.carrotsearch</groupId>
				<artifactId>hppc</artifactId>
				<version>0.6.1</version>
			</dependency>
			
			<!-- speed4j性能监控 -->
			<dependency>
				<groupId>com.ecyrd.speed4j</groupId>
				<artifactId>speed4j</artifactId>
				<version>0.18</version>
			</dependency>
			
			
			<!-- JavaEE -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.5</version>
				<scope>provided</scope>
			</dependency>
			
			<!-- apache commons -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.2</version>
			</dependency>
			
			<!-- logging -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>
			
			
		</dependencies>
	</dependencyManagement>

	<!-- 插件管理 -->
	<build>
		<defaultGoal>package</defaultGoal>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<excludes>
					<exclude>log4j.*</exclude>
				</excludes>
			</resource>
			<resource>
				<!-- 默认即：src/main/java -->
				<directory>${project.build.sourceDirectory}</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.resource</include>
					<include>**/*.xml</include>
					<include>**/*.java</include>
					<include>**/*.conf</include>
					<include>**/*.tld</include>
					<include>**/*.*</include>
					<include>**/*.schemas</include>
					<include>**/*.handlers</include>
					<include>**/*.xsd</include>
				</includes>
				<excludes>
					<exclude>log4j.*</exclude>
					<exclude>*.sql</exclude>
				</excludes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.9.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.6.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.9</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<!-- 编译级别 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<fork>true</fork>
						<verbose>true</verbose>
						<encoding>UTF-8</encoding>
						<compilerArgs>
							<arg>-parameters</arg>
						</compilerArgs>
						<compilerArguments>
							<!-- 避免源代码被压缩进jar导致再次编译 -->
							<sourcepath>${project.basedir}/src/main/java</sourcepath>
						</compilerArguments>
					</configuration>
				</plugin>

				<!-- 发布源代码jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- 发布javadoc -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.1</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- 测试用例 -->
				<!-- 为了省的每次打包的时候都走很慢的测试用例(有些人的测试用例还有伤害性操作)，所以如果要运行测试用例必须指明运行哪个 -->
				<!-- 使用方法：mvn test -Dtest=AbcTest -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<includes>
							<include>**/${test}.java</include>
						</includes>
					</configuration>
				</plugin>

				<!-- mvn eclilpse:eclipse 时不使用本地源码 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<configuration>
						<!-- 不引用workspace里的项目 -->
						<useProjectReferences>false</useProjectReferences>
						<!-- 下载源代码 -->
						<downloadSources>true</downloadSources>
						<downloadJavadocs>false</downloadJavadocs>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- 为了保证每次都把旧的snapshot删除 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>remove-old-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>remove-project-artifact</goal>
						</goals>
						<configuration>
							<removeAll>true</removeAll>
							<!-- remove all versions of built artifacts including all versions. 
								Install phase will regenerate -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
